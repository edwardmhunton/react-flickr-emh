module.exports = [{"name":"FlickrComponent","description":"Flickr component to render an image to the page at specified intervals","props":{"query":{"type":{"name":"string"},"required":false,"description":"The search term to use when building the api call to Flickr","defaultValue":{"value":"'cats'","computed":false}},"id":{"type":{"name":"string"},"required":true,"description":"html div id for reference by parent application","defaultValue":{"value":"'flickr_component'","computed":false}},"interval_text":{"type":{"name":"string"},"required":false,"description":"The text next to select input","defaultValue":{"value":"'Interval (sec)'","computed":false}},"flickr_key":{"type":{"name":"string"},"required":true,"description":"Your Flickr key","defaultValue":{"value":"'e9a6985a33854d68692b99b0691aeb6b'","computed":false}},"width":{"type":{"name":"number"},"required":false,"description":"Height of component","defaultValue":{"value":"200","computed":false}},"height":{"type":{"name":"number"},"required":false,"description":"Width of component","defaultValue":{"value":"200","computed":false}},"interval":{"type":{"name":"number"},"required":false,"description":"Inishial interval duration","defaultValue":{"value":"5000","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FlickrApi from './api/flickr-api';\nimport SelectInput from './common/SelectInput';\nimport Loader from './common/loader';\n\n/** Flickr component to render an image to the page at specified intervals */\n\nclass FlickrComponent extends React.Component {\n\nstate = {url:'', interval:5000, loaded:'Loading', timeout:null}\n\n  options = [\n    {id: '3',value: 3000, text:'3'},\n    {id: '4',value: 4000, text:'4'},\n    {id: '5',value: 5000, text:'5'},\n    {id: '6',value: 6000, text:'6'},\n    {id: '7',value: 7000, text:'7'},\n    {id: '8',value: 8000, text:'8'},\n    {id: '9',value: 9000, text:'9'},\n    {id: '10',value: 10000, text:'10'}\n  ]\n\n\n\n\n  getImage = () => {\n    this.setState({loaded: 'Loading'});\n    FlickrApi.getImage(this.props.query, this.props.flickr_key).then(photo => {\n\n              if(photo.photos.photo){\n\n                  let ran = Math.floor((Math.random() * 9) + 0); // to have a better cahnce of getting a fresh image each time\n\n                  this.setState({loaded: ''});\n                  this.setState_Url(photo.photos.photo[ran].url_s);\n\n                  if(!this.timeout) { // dont create a new interval if one exists\n                    this.startInterval(this.getImage);\n                  }\n              }\n            }).catch(error => {\n\n            throw(error);\n\n          })\n        }\n\n  startInterval = (func) => {\n\n    var self = this;\n\n    this.timeout = setInterval(function () {\n\n        func();\n\n   }, this.state.interval);\n }\n\n clearInterval = () => {\n\n   if(this.timeout){\n     clearInterval(this.timeout);\n   }\n\n }\n\n onChange = (event) => {\n    if(event.target.value.length > 0){\n      this.setState_Interval(event.target.value, () => {\n        this.clearInterval();\n        this.startInterval(this.getImage);\n      });\n    }\n  }\n\n  setState_Url = (url) => {\n    this.setState({url: url});\n  }\n\n  setState_Interval = (num, callback) => {\n    this.setState({interval: num}, () => callback()); // avpids setState timing issues\n  }\n\n  componentDidMount = function(){\n\n    if(!this.props.test){this.getImage();}\n\n  }\n  render() {\n\n          const { width, height, id, interval_text } = this.props;\n          return (\n            <div>\n              <div style={{width: width, height:height}} id={id} >\n                <Loader styles={{display: 'block', position:'absolute', paddingTop:height/2, paddingLeft:(width/2)-25, color:'#FFF'}} loaded={this.state.loaded} />\n                <img src={this.state.url} id={id+'_image'} alt='flickr_img' style={{width: width, height:height}} />\n              </div>\n              <SelectInput name=\"interval\" select_styles={{margin:'5px'}} label={interval_text} label_styles={{float: 'left', padding:'5px'}} value={this.state.interval} defaultValue={\"Choose interval\"} defaultOption={\"Choose interval\"} options={this.options} onChange={this.onChange.bind(this)}/>\n           </div>\n        )\n      }\n}\n\nFlickrComponent.propTypes = {\n  /** The search term to use when building the api call to Flickr*/\n  query: PropTypes.string,\n  /** html div id for reference by parent application */\n  id: PropTypes.string.isRequired,\n  /** The text next to select input */\n  interval_text: PropTypes.string,\n  /** Your Flickr key */\n  flickr_key: PropTypes.string.isRequired,\n  /** Height of component  */\n  width: PropTypes.number,\n  /** Width of component  */\n  height: PropTypes.number,\n  /** Inishial interval duration  */\n  interval: PropTypes.number\n\n}\n\nFlickrComponent.defaultProps = {\n  query: 'cats',\n  id:'flickr_component',\n  interval_text: 'Interval (sec)',\n  flickr_key: 'e9a6985a33854d68692b99b0691aeb6b',\n  width: 200,\n  height:200,\n  interval: 5000\n}\n\nexport default FlickrComponent;\n","examples":[{"name":"ExampleFlickrComponent","description":"","code":"import React from 'react';\n\nimport FlickrComponent from 'react-flickr-emh/FlickrComponent';\n\n/* example of the FlickrComponent */\n\n\nclass ExampleFlickrComponent extends React.Component {\n\n\n\n  render () {\n\n    const props = {\n\n      \"width\": 200,\n      \"height\": 200,\n      \"query\": \"cats\",\n      \"id\": 'flickr_component',\n      \"interval_text\": 'Interval (sec)',\n      \"flickr_key\": \"e9a6985a33854d68692b99b0691aeb6b\" //use your own flickr key\n\n    }\n\n\n    return (\n\n          <FlickrComponent {...props} />\n\n    )\n  }\n\n\n}\n\n\nexport default ExampleFlickrComponent;\n"}]}]